@inject IAuthorizationService AuthorizationService
@using System.Security.Claims
@using System;
@using System.Threading.Tasks;
@using Crud.Net.Constant;

@{
    ViewData["Title"] = "Policy";
}

<h1>Manage Product</h1>
<hr />

@* now create buttons for 4 permissions which are defined (edit , delete , create, view)*@

@if (AuthorizationService.AuthorizeAsync(User, Permisions.Products.View).Result.Succeeded)  @*user : the user logined now , Permisions.Products.View: calling permission defined in product method in permission class*@
{
    <a href="#" class="btn btn-primary">View</a>
}

@if (AuthorizationService.AuthorizeAsync(User, Permisions.Products.Create).Result.Succeeded)
{
    <a href="#" class="btn btn-secondary">Create</a>
}

@if ((AuthorizationService.AuthorizeAsync(User, Permisions.Products.Edit)).Result.Succeeded)
{
    <a asp-action="Edit" class="btn btn-success">Edit</a>
}

@if (AuthorizationService.AuthorizeAsync(User, Permisions.Products.Delete).Result.Succeeded)
{
    <a href="#" class="btn btn-danger">Delete</a>
}